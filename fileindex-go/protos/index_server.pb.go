// file-based btree index package 2024-06-10
// created by myjang@etri.re.kr
// Update 2024-12-05

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        v3.12.4
// source: protos/index_server.proto

package idxserver_api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ComparisonOps int32

const (
	ComparisonOps_Eq            ComparisonOps = 0
	ComparisonOps_NotEq         ComparisonOps = 1
	ComparisonOps_Less          ComparisonOps = 2
	ComparisonOps_LessThanEq    ComparisonOps = 3
	ComparisonOps_Greater       ComparisonOps = 4
	ComparisonOps_GreaterThanEq ComparisonOps = 5
	ComparisonOps_Range         ComparisonOps = 6
	ComparisonOps_Knn           ComparisonOps = 7
)

// Enum value maps for ComparisonOps.
var (
	ComparisonOps_name = map[int32]string{
		0: "Eq",
		1: "NotEq",
		2: "Less",
		3: "LessThanEq",
		4: "Greater",
		5: "GreaterThanEq",
		6: "Range",
		7: "Knn",
	}
	ComparisonOps_value = map[string]int32{
		"Eq":            0,
		"NotEq":         1,
		"Less":          2,
		"LessThanEq":    3,
		"Greater":       4,
		"GreaterThanEq": 5,
		"Range":         6,
		"Knn":           7,
	}
)

func (x ComparisonOps) Enum() *ComparisonOps {
	p := new(ComparisonOps)
	*p = x
	return p
}

func (x ComparisonOps) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ComparisonOps) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_index_server_proto_enumTypes[0].Descriptor()
}

func (ComparisonOps) Type() protoreflect.EnumType {
	return &file_protos_index_server_proto_enumTypes[0]
}

func (x ComparisonOps) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ComparisonOps.Descriptor instead.
func (ComparisonOps) EnumDescriptor() ([]byte, []int) {
	return file_protos_index_server_proto_rawDescGZIP(), []int{0}
}

type CreateRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	IndexID        string                 `protobuf:"bytes,1,opt,name=IndexID,proto3" json:"IndexID,omitempty"`     //index id = used as a key
	IndexName      string                 `protobuf:"bytes,2,opt,name=IndexName,proto3" json:"IndexName,omitempty"` //index name
	KeyCol         string                 `protobuf:"bytes,3,opt,name=KeyCol,proto3" json:"KeyCol,omitempty"`       //index column name (one of PvdHist_data)
	FilePath       string                 `protobuf:"bytes,4,opt,name=FilePath,proto3" json:"FilePath,omitempty"`   //file index storage FilePath
	KeySize        int32                  `protobuf:"varint,5,opt,name=KeySize,proto3" json:"KeySize,omitempty"`    //file index key size (byte)
	ReuqestMessage string                 `protobuf:"bytes,6,opt,name=Reuqest_message,json=ReuqestMessage,proto3" json:"Reuqest_message,omitempty"`
	BlockNum       int32                  `protobuf:"varint,7,opt,name=BlockNum,proto3" json:"BlockNum,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CreateRequest) Reset() {
	*x = CreateRequest{}
	mi := &file_protos_index_server_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRequest) ProtoMessage() {}

func (x *CreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_index_server_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRequest.ProtoReflect.Descriptor instead.
func (*CreateRequest) Descriptor() ([]byte, []int) {
	return file_protos_index_server_proto_rawDescGZIP(), []int{0}
}

func (x *CreateRequest) GetIndexID() string {
	if x != nil {
		return x.IndexID
	}
	return ""
}

func (x *CreateRequest) GetIndexName() string {
	if x != nil {
		return x.IndexName
	}
	return ""
}

func (x *CreateRequest) GetKeyCol() string {
	if x != nil {
		return x.KeyCol
	}
	return ""
}

func (x *CreateRequest) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *CreateRequest) GetKeySize() int32 {
	if x != nil {
		return x.KeySize
	}
	return 0
}

func (x *CreateRequest) GetReuqestMessage() string {
	if x != nil {
		return x.ReuqestMessage
	}
	return ""
}

func (x *CreateRequest) GetBlockNum() int32 {
	if x != nil {
		return x.BlockNum
	}
	return 0
}

type IdxResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	ResponseCode    int32                  `protobuf:"varint,1,opt,name=Response_code,json=ResponseCode,proto3" json:"Response_code,omitempty"` // if 200 OK else Error
	ResponseMessage string                 `protobuf:"bytes,2,opt,name=Response_message,json=ResponseMessage,proto3" json:"Response_message,omitempty"`
	IndexID         string                 `protobuf:"bytes,3,opt,name=IndexID,proto3" json:"IndexID,omitempty"`
	IndexCol        string                 `protobuf:"bytes,4,opt,name=IndexCol,proto3" json:"IndexCol,omitempty"` //index column name
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *IdxResponse) Reset() {
	*x = IdxResponse{}
	mi := &file_protos_index_server_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IdxResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdxResponse) ProtoMessage() {}

func (x *IdxResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_index_server_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdxResponse.ProtoReflect.Descriptor instead.
func (*IdxResponse) Descriptor() ([]byte, []int) {
	return file_protos_index_server_proto_rawDescGZIP(), []int{1}
}

func (x *IdxResponse) GetResponseCode() int32 {
	if x != nil {
		return x.ResponseCode
	}
	return 0
}

func (x *IdxResponse) GetResponseMessage() string {
	if x != nil {
		return x.ResponseMessage
	}
	return ""
}

func (x *IdxResponse) GetIndexID() string {
	if x != nil {
		return x.IndexID
	}
	return ""
}

func (x *IdxResponse) GetIndexCol() string {
	if x != nil {
		return x.IndexCol
	}
	return ""
}

type BcDataInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TxId          string                 `protobuf:"bytes,1,opt,name=TxId,proto3" json:"TxId,omitempty"`
	KeyCol        string                 `protobuf:"bytes,2,opt,name=key_col,json=keyCol,proto3" json:"key_col,omitempty"`
	Pvd           *PvdHistData           `protobuf:"bytes,3,opt,name=Pvd,proto3" json:"Pvd,omitempty"`                     // PVD 데이터
	IndexableData *IndexableData         `protobuf:"bytes,4,opt,name=IndexableData,proto3" json:"IndexableData,omitempty"` // 범용 데이터
	Response      *IdxResponse           `protobuf:"bytes,5,opt,name=Response,proto3" json:"Response,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BcDataInfo) Reset() {
	*x = BcDataInfo{}
	mi := &file_protos_index_server_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BcDataInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BcDataInfo) ProtoMessage() {}

func (x *BcDataInfo) ProtoReflect() protoreflect.Message {
	mi := &file_protos_index_server_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BcDataInfo.ProtoReflect.Descriptor instead.
func (*BcDataInfo) Descriptor() ([]byte, []int) {
	return file_protos_index_server_proto_rawDescGZIP(), []int{2}
}

func (x *BcDataInfo) GetTxId() string {
	if x != nil {
		return x.TxId
	}
	return ""
}

func (x *BcDataInfo) GetKeyCol() string {
	if x != nil {
		return x.KeyCol
	}
	return ""
}

func (x *BcDataInfo) GetPvd() *PvdHistData {
	if x != nil {
		return x.Pvd
	}
	return nil
}

func (x *BcDataInfo) GetIndexableData() *IndexableData {
	if x != nil {
		return x.IndexableData
	}
	return nil
}

func (x *BcDataInfo) GetResponse() *IdxResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

type InsertData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ColIndex      string                 `protobuf:"bytes,1,opt,name=ColIndex,proto3" json:"ColIndex,omitempty"` //indexid
	BcList        []*BcDataInfo          `protobuf:"bytes,2,rep,name=BcList,proto3" json:"BcList,omitempty"`
	Response      *IdxResponse           `protobuf:"bytes,3,opt,name=Response,proto3" json:"Response,omitempty"`
	ColName       string                 `protobuf:"bytes,4,opt,name=ColName,proto3" json:"ColName,omitempty"`   //indexing column (KeyCol)
	FilePath      string                 `protobuf:"bytes,5,opt,name=FilePath,proto3" json:"FilePath,omitempty"` //file index storage FilePath
	KeySize       int32                  `protobuf:"varint,6,opt,name=KeySize,proto3" json:"KeySize,omitempty"`  //file index key size (byte)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InsertData) Reset() {
	*x = InsertData{}
	mi := &file_protos_index_server_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InsertData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertData) ProtoMessage() {}

func (x *InsertData) ProtoReflect() protoreflect.Message {
	mi := &file_protos_index_server_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertData.ProtoReflect.Descriptor instead.
func (*InsertData) Descriptor() ([]byte, []int) {
	return file_protos_index_server_proto_rawDescGZIP(), []int{3}
}

func (x *InsertData) GetColIndex() string {
	if x != nil {
		return x.ColIndex
	}
	return ""
}

func (x *InsertData) GetBcList() []*BcDataInfo {
	if x != nil {
		return x.BcList
	}
	return nil
}

func (x *InsertData) GetResponse() *IdxResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *InsertData) GetColName() string {
	if x != nil {
		return x.ColName
	}
	return ""
}

func (x *InsertData) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *InsertData) GetKeySize() int32 {
	if x != nil {
		return x.KeySize
	}
	return 0
}

type InsertSData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ColIndex      string                 `protobuf:"bytes,1,opt,name=ColIndex,proto3" json:"ColIndex,omitempty"` //indexid
	ColName       string                 `protobuf:"bytes,2,opt,name=ColName,proto3" json:"ColName,omitempty"`   //indexing column (KeyCol)
	X             float32                `protobuf:"fixed32,3,opt,name=x,proto3" json:"x,omitempty"`
	Y             float32                `protobuf:"fixed32,4,opt,name=y,proto3" json:"y,omitempty"`
	GeoHash       uint32                 `protobuf:"varint,5,opt,name=GeoHash,proto3" json:"GeoHash,omitempty"`
	TxId          string                 `protobuf:"bytes,6,opt,name=TxId,proto3" json:"TxId,omitempty"`
	Time          uint64                 `protobuf:"varint,7,opt,name=time,proto3" json:"time,omitempty"`
	FilePath      string                 `protobuf:"bytes,8,opt,name=FilePath,proto3" json:"FilePath,omitempty"` //file index storage FilePath
	KeySize       int32                  `protobuf:"varint,9,opt,name=KeySize,proto3" json:"KeySize,omitempty"`  //file index key size (byte)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InsertSData) Reset() {
	*x = InsertSData{}
	mi := &file_protos_index_server_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InsertSData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertSData) ProtoMessage() {}

func (x *InsertSData) ProtoReflect() protoreflect.Message {
	mi := &file_protos_index_server_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertSData.ProtoReflect.Descriptor instead.
func (*InsertSData) Descriptor() ([]byte, []int) {
	return file_protos_index_server_proto_rawDescGZIP(), []int{4}
}

func (x *InsertSData) GetColIndex() string {
	if x != nil {
		return x.ColIndex
	}
	return ""
}

func (x *InsertSData) GetColName() string {
	if x != nil {
		return x.ColName
	}
	return ""
}

func (x *InsertSData) GetX() float32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *InsertSData) GetY() float32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *InsertSData) GetGeoHash() uint32 {
	if x != nil {
		return x.GeoHash
	}
	return 0
}

func (x *InsertSData) GetTxId() string {
	if x != nil {
		return x.TxId
	}
	return ""
}

func (x *InsertSData) GetTime() uint64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *InsertSData) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *InsertSData) GetKeySize() int32 {
	if x != nil {
		return x.KeySize
	}
	return 0
}

type SearchRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IndexID       string                 `protobuf:"bytes,1,opt,name=IndexID,proto3" json:"IndexID,omitempty"` //index id = used as a key
	Key           string                 `protobuf:"bytes,2,opt,name=Key,proto3" json:"Key,omitempty"`
	TxId          string                 `protobuf:"bytes,3,opt,name=TxId,proto3" json:"TxId,omitempty"`
	Field         string                 `protobuf:"bytes,4,opt,name=Field,proto3" json:"Field,omitempty"`
	Value         string                 `protobuf:"bytes,5,opt,name=Value,proto3" json:"Value,omitempty"` //for simple query (CompOp 0~5)
	Begin         string                 `protobuf:"bytes,6,opt,name=Begin,proto3" json:"Begin,omitempty"` //for range query
	End           string                 `protobuf:"bytes,7,opt,name=End,proto3" json:"End,omitempty"`
	ComOp         ComparisonOps          `protobuf:"varint,8,opt,name=ComOp,proto3,enum=idxserver.ComparisonOps" json:"ComOp,omitempty"`
	X             float32                `protobuf:"fixed32,9,opt,name=x,proto3" json:"x,omitempty"`
	Y             float32                `protobuf:"fixed32,10,opt,name=y,proto3" json:"y,omitempty"`
	K             int32                  `protobuf:"varint,11,opt,name=k,proto3" json:"k,omitempty"`
	Range         float32                `protobuf:"fixed32,12,opt,name=range,proto3" json:"range,omitempty"`
	FilePath      string                 `protobuf:"bytes,13,opt,name=FilePath,proto3" json:"FilePath,omitempty"` //file index storage FilePath
	KeySize       int32                  `protobuf:"varint,14,opt,name=keySize,proto3" json:"keySize,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchRequest) Reset() {
	*x = SearchRequest{}
	mi := &file_protos_index_server_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchRequest) ProtoMessage() {}

func (x *SearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_index_server_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchRequest.ProtoReflect.Descriptor instead.
func (*SearchRequest) Descriptor() ([]byte, []int) {
	return file_protos_index_server_proto_rawDescGZIP(), []int{5}
}

func (x *SearchRequest) GetIndexID() string {
	if x != nil {
		return x.IndexID
	}
	return ""
}

func (x *SearchRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *SearchRequest) GetTxId() string {
	if x != nil {
		return x.TxId
	}
	return ""
}

func (x *SearchRequest) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *SearchRequest) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *SearchRequest) GetBegin() string {
	if x != nil {
		return x.Begin
	}
	return ""
}

func (x *SearchRequest) GetEnd() string {
	if x != nil {
		return x.End
	}
	return ""
}

func (x *SearchRequest) GetComOp() ComparisonOps {
	if x != nil {
		return x.ComOp
	}
	return ComparisonOps_Eq
}

func (x *SearchRequest) GetX() float32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *SearchRequest) GetY() float32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *SearchRequest) GetK() int32 {
	if x != nil {
		return x.K
	}
	return 0
}

func (x *SearchRequest) GetRange() float32 {
	if x != nil {
		return x.Range
	}
	return 0
}

func (x *SearchRequest) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *SearchRequest) GetKeySize() int32 {
	if x != nil {
		return x.KeySize
	}
	return 0
}

type RstTxList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IndexID       string                 `protobuf:"bytes,1,opt,name=IndexID,proto3" json:"IndexID,omitempty"`
	Key           string                 `protobuf:"bytes,2,opt,name=Key,proto3" json:"Key,omitempty"`
	IdxData       []string               `protobuf:"bytes,3,rep,name=IdxData,proto3" json:"IdxData,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RstTxList) Reset() {
	*x = RstTxList{}
	mi := &file_protos_index_server_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RstTxList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RstTxList) ProtoMessage() {}

func (x *RstTxList) ProtoReflect() protoreflect.Message {
	mi := &file_protos_index_server_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RstTxList.ProtoReflect.Descriptor instead.
func (*RstTxList) Descriptor() ([]byte, []int) {
	return file_protos_index_server_proto_rawDescGZIP(), []int{6}
}

func (x *RstTxList) GetIndexID() string {
	if x != nil {
		return x.IndexID
	}
	return ""
}

func (x *RstTxList) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *RstTxList) GetIdxData() []string {
	if x != nil {
		return x.IdxData
	}
	return nil
}

// 범용적인 인덱싱 가능한 데이터 구조 (DynamicFields 사용)
type IndexableData struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 기본 식별자 (고정)
	TxId            string `protobuf:"bytes,1,opt,name=TxId,proto3" json:"TxId,omitempty"`
	ContractAddress string `protobuf:"bytes,2,opt,name=ContractAddress,proto3" json:"ContractAddress,omitempty"`
	EventName       string `protobuf:"bytes,3,opt,name=EventName,proto3" json:"EventName,omitempty"`
	// 메타데이터 (고정)
	Timestamp   string `protobuf:"bytes,4,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	BlockNumber uint64 `protobuf:"varint,5,opt,name=BlockNumber,proto3" json:"BlockNumber,omitempty"`
	// 동적 필드들 (유연하게 확장 가능)
	DynamicFields map[string]string `protobuf:"bytes,6,rep,name=DynamicFields,proto3" json:"DynamicFields,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // 키-값 쌍으로 유동적 데이터
	// 스키마 버전 관리
	SchemaVersion string `protobuf:"bytes,7,opt,name=SchemaVersion,proto3" json:"SchemaVersion,omitempty"` // 데이터 구조 버전 관리
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IndexableData) Reset() {
	*x = IndexableData{}
	mi := &file_protos_index_server_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IndexableData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexableData) ProtoMessage() {}

func (x *IndexableData) ProtoReflect() protoreflect.Message {
	mi := &file_protos_index_server_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexableData.ProtoReflect.Descriptor instead.
func (*IndexableData) Descriptor() ([]byte, []int) {
	return file_protos_index_server_proto_rawDescGZIP(), []int{7}
}

func (x *IndexableData) GetTxId() string {
	if x != nil {
		return x.TxId
	}
	return ""
}

func (x *IndexableData) GetContractAddress() string {
	if x != nil {
		return x.ContractAddress
	}
	return ""
}

func (x *IndexableData) GetEventName() string {
	if x != nil {
		return x.EventName
	}
	return ""
}

func (x *IndexableData) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *IndexableData) GetBlockNumber() uint64 {
	if x != nil {
		return x.BlockNumber
	}
	return 0
}

func (x *IndexableData) GetDynamicFields() map[string]string {
	if x != nil {
		return x.DynamicFields
	}
	return nil
}

func (x *IndexableData) GetSchemaVersion() string {
	if x != nil {
		return x.SchemaVersion
	}
	return ""
}

// 기존 PVD 구조체 (하위 호환성 유지)
type PvdHistData struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	CollectionDt         string                 `protobuf:"bytes,1,opt,name=Collection_dt,json=CollectionDt,proto3" json:"Collection_dt,omitempty"`
	StartvectorLatitude  string                 `protobuf:"bytes,2,opt,name=Startvector_latitude,json=StartvectorLatitude,proto3" json:"Startvector_latitude,omitempty"`
	StartvectorLongitude string                 `protobuf:"bytes,3,opt,name=Startvector_longitude,json=StartvectorLongitude,proto3" json:"Startvector_longitude,omitempty"`
	Transmisstion        string                 `protobuf:"bytes,4,opt,name=Transmisstion,proto3" json:"Transmisstion,omitempty"`
	Speed                int32                  `protobuf:"varint,5,opt,name=Speed,proto3" json:"Speed,omitempty"`
	HazardLights         string                 `protobuf:"bytes,6,opt,name=Hazard_lights,json=HazardLights,proto3" json:"Hazard_lights,omitempty"`
	LeftTurnSignalOn     string                 `protobuf:"bytes,7,opt,name=Left_turn_signal_on,json=LeftTurnSignalOn,proto3" json:"Left_turn_signal_on,omitempty"`
	RightTurnSignalOn    string                 `protobuf:"bytes,8,opt,name=Right_turn_signal_on,json=RightTurnSignalOn,proto3" json:"Right_turn_signal_on,omitempty"`
	Steering             int32                  `protobuf:"varint,9,opt,name=Steering,proto3" json:"Steering,omitempty"`
	Rpm                  int32                  `protobuf:"varint,10,opt,name=Rpm,proto3" json:"Rpm,omitempty"`
	Footbrake            string                 `protobuf:"bytes,11,opt,name=Footbrake,proto3" json:"Footbrake,omitempty"`
	Gear                 string                 `protobuf:"bytes,12,opt,name=Gear,proto3" json:"Gear,omitempty"`
	Accelator            int32                  `protobuf:"varint,13,opt,name=Accelator,proto3" json:"Accelator,omitempty"`
	Wipers               string                 `protobuf:"bytes,14,opt,name=Wipers,proto3" json:"Wipers,omitempty"`
	TireWarnLeftF        string                 `protobuf:"bytes,15,opt,name=Tire_warn_left_f,json=TireWarnLeftF,proto3" json:"Tire_warn_left_f,omitempty"`
	TireWarnLeftR        string                 `protobuf:"bytes,16,opt,name=Tire_warn_left_r,json=TireWarnLeftR,proto3" json:"Tire_warn_left_r,omitempty"`
	TireWarnRightF       string                 `protobuf:"bytes,17,opt,name=Tire_warn_right_f,json=TireWarnRightF,proto3" json:"Tire_warn_right_f,omitempty"`
	TireWarnRightR       string                 `protobuf:"bytes,18,opt,name=Tire_warn_right_r,json=TireWarnRightR,proto3" json:"Tire_warn_right_r,omitempty"`
	TirePsiLeftF         int32                  `protobuf:"varint,19,opt,name=Tire_psi_left_f,json=TirePsiLeftF,proto3" json:"Tire_psi_left_f,omitempty"`
	TirePsiLeftR         int32                  `protobuf:"varint,20,opt,name=Tire_psi_left_r,json=TirePsiLeftR,proto3" json:"Tire_psi_left_r,omitempty"`
	TirePsiRightF        int32                  `protobuf:"varint,21,opt,name=Tire_psi_right_f,json=TirePsiRightF,proto3" json:"Tire_psi_right_f,omitempty"`
	TirePsiRightR        int32                  `protobuf:"varint,22,opt,name=Tire_psi_right_r,json=TirePsiRightR,proto3" json:"Tire_psi_right_r,omitempty"`
	FuelPercent          int32                  `protobuf:"varint,23,opt,name=Fuel_percent,json=FuelPercent,proto3" json:"Fuel_percent,omitempty"`
	FuelLiter            int32                  `protobuf:"varint,24,opt,name=Fuel_liter,json=FuelLiter,proto3" json:"Fuel_liter,omitempty"`
	Totaldist            int32                  `protobuf:"varint,25,opt,name=Totaldist,proto3" json:"Totaldist,omitempty"`
	RsuId                string                 `protobuf:"bytes,26,opt,name=Rsu_id,json=RsuId,proto3" json:"Rsu_id,omitempty"`
	MsgId                string                 `protobuf:"bytes,27,opt,name=Msg_id,json=MsgId,proto3" json:"Msg_id,omitempty"`
	StartvectorHeading   int32                  `protobuf:"varint,28,opt,name=Startvector_heading,json=StartvectorHeading,proto3" json:"Startvector_heading,omitempty"`
	Address              string                 `protobuf:"bytes,29,opt,name=Address,proto3" json:"Address,omitempty"`
	OrganizationName     string                 `protobuf:"bytes,30,opt,name=OrganizationName,proto3" json:"OrganizationName,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *PvdHistData) Reset() {
	*x = PvdHistData{}
	mi := &file_protos_index_server_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PvdHistData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PvdHistData) ProtoMessage() {}

func (x *PvdHistData) ProtoReflect() protoreflect.Message {
	mi := &file_protos_index_server_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PvdHistData.ProtoReflect.Descriptor instead.
func (*PvdHistData) Descriptor() ([]byte, []int) {
	return file_protos_index_server_proto_rawDescGZIP(), []int{8}
}

func (x *PvdHistData) GetCollectionDt() string {
	if x != nil {
		return x.CollectionDt
	}
	return ""
}

func (x *PvdHistData) GetStartvectorLatitude() string {
	if x != nil {
		return x.StartvectorLatitude
	}
	return ""
}

func (x *PvdHistData) GetStartvectorLongitude() string {
	if x != nil {
		return x.StartvectorLongitude
	}
	return ""
}

func (x *PvdHistData) GetTransmisstion() string {
	if x != nil {
		return x.Transmisstion
	}
	return ""
}

func (x *PvdHistData) GetSpeed() int32 {
	if x != nil {
		return x.Speed
	}
	return 0
}

func (x *PvdHistData) GetHazardLights() string {
	if x != nil {
		return x.HazardLights
	}
	return ""
}

func (x *PvdHistData) GetLeftTurnSignalOn() string {
	if x != nil {
		return x.LeftTurnSignalOn
	}
	return ""
}

func (x *PvdHistData) GetRightTurnSignalOn() string {
	if x != nil {
		return x.RightTurnSignalOn
	}
	return ""
}

func (x *PvdHistData) GetSteering() int32 {
	if x != nil {
		return x.Steering
	}
	return 0
}

func (x *PvdHistData) GetRpm() int32 {
	if x != nil {
		return x.Rpm
	}
	return 0
}

func (x *PvdHistData) GetFootbrake() string {
	if x != nil {
		return x.Footbrake
	}
	return ""
}

func (x *PvdHistData) GetGear() string {
	if x != nil {
		return x.Gear
	}
	return ""
}

func (x *PvdHistData) GetAccelator() int32 {
	if x != nil {
		return x.Accelator
	}
	return 0
}

func (x *PvdHistData) GetWipers() string {
	if x != nil {
		return x.Wipers
	}
	return ""
}

func (x *PvdHistData) GetTireWarnLeftF() string {
	if x != nil {
		return x.TireWarnLeftF
	}
	return ""
}

func (x *PvdHistData) GetTireWarnLeftR() string {
	if x != nil {
		return x.TireWarnLeftR
	}
	return ""
}

func (x *PvdHistData) GetTireWarnRightF() string {
	if x != nil {
		return x.TireWarnRightF
	}
	return ""
}

func (x *PvdHistData) GetTireWarnRightR() string {
	if x != nil {
		return x.TireWarnRightR
	}
	return ""
}

func (x *PvdHistData) GetTirePsiLeftF() int32 {
	if x != nil {
		return x.TirePsiLeftF
	}
	return 0
}

func (x *PvdHistData) GetTirePsiLeftR() int32 {
	if x != nil {
		return x.TirePsiLeftR
	}
	return 0
}

func (x *PvdHistData) GetTirePsiRightF() int32 {
	if x != nil {
		return x.TirePsiRightF
	}
	return 0
}

func (x *PvdHistData) GetTirePsiRightR() int32 {
	if x != nil {
		return x.TirePsiRightR
	}
	return 0
}

func (x *PvdHistData) GetFuelPercent() int32 {
	if x != nil {
		return x.FuelPercent
	}
	return 0
}

func (x *PvdHistData) GetFuelLiter() int32 {
	if x != nil {
		return x.FuelLiter
	}
	return 0
}

func (x *PvdHistData) GetTotaldist() int32 {
	if x != nil {
		return x.Totaldist
	}
	return 0
}

func (x *PvdHistData) GetRsuId() string {
	if x != nil {
		return x.RsuId
	}
	return ""
}

func (x *PvdHistData) GetMsgId() string {
	if x != nil {
		return x.MsgId
	}
	return ""
}

func (x *PvdHistData) GetStartvectorHeading() int32 {
	if x != nil {
		return x.StartvectorHeading
	}
	return 0
}

func (x *PvdHistData) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *PvdHistData) GetOrganizationName() string {
	if x != nil {
		return x.OrganizationName
	}
	return ""
}

var File_protos_index_server_proto protoreflect.FileDescriptor

const file_protos_index_server_proto_rawDesc = "" +
	"\n" +
	"\x19protos/index_server.proto\x12\tidxserver\"\xda\x01\n" +
	"\rCreateRequest\x12\x18\n" +
	"\aIndexID\x18\x01 \x01(\tR\aIndexID\x12\x1c\n" +
	"\tIndexName\x18\x02 \x01(\tR\tIndexName\x12\x16\n" +
	"\x06KeyCol\x18\x03 \x01(\tR\x06KeyCol\x12\x1a\n" +
	"\bFilePath\x18\x04 \x01(\tR\bFilePath\x12\x18\n" +
	"\aKeySize\x18\x05 \x01(\x05R\aKeySize\x12'\n" +
	"\x0fReuqest_message\x18\x06 \x01(\tR\x0eReuqestMessage\x12\x1a\n" +
	"\bBlockNum\x18\a \x01(\x05R\bBlockNum\"\x93\x01\n" +
	"\vIdxResponse\x12#\n" +
	"\rResponse_code\x18\x01 \x01(\x05R\fResponseCode\x12)\n" +
	"\x10Response_message\x18\x02 \x01(\tR\x0fResponseMessage\x12\x18\n" +
	"\aIndexID\x18\x03 \x01(\tR\aIndexID\x12\x1a\n" +
	"\bIndexCol\x18\x04 \x01(\tR\bIndexCol\"\xd8\x01\n" +
	"\n" +
	"BcDataInfo\x12\x12\n" +
	"\x04TxId\x18\x01 \x01(\tR\x04TxId\x12\x17\n" +
	"\akey_col\x18\x02 \x01(\tR\x06keyCol\x12)\n" +
	"\x03Pvd\x18\x03 \x01(\v2\x17.idxserver.PvdHist_dataR\x03Pvd\x12>\n" +
	"\rIndexableData\x18\x04 \x01(\v2\x18.idxserver.IndexableDataR\rIndexableData\x122\n" +
	"\bResponse\x18\x05 \x01(\v2\x16.idxserver.IdxResponseR\bResponse\"\xdb\x01\n" +
	"\n" +
	"InsertData\x12\x1a\n" +
	"\bColIndex\x18\x01 \x01(\tR\bColIndex\x12-\n" +
	"\x06BcList\x18\x02 \x03(\v2\x15.idxserver.BcDataInfoR\x06BcList\x122\n" +
	"\bResponse\x18\x03 \x01(\v2\x16.idxserver.IdxResponseR\bResponse\x12\x18\n" +
	"\aColName\x18\x04 \x01(\tR\aColName\x12\x1a\n" +
	"\bFilePath\x18\x05 \x01(\tR\bFilePath\x12\x18\n" +
	"\aKeySize\x18\x06 \x01(\x05R\aKeySize\"\xd7\x01\n" +
	"\vInsertSData\x12\x1a\n" +
	"\bColIndex\x18\x01 \x01(\tR\bColIndex\x12\x18\n" +
	"\aColName\x18\x02 \x01(\tR\aColName\x12\f\n" +
	"\x01x\x18\x03 \x01(\x02R\x01x\x12\f\n" +
	"\x01y\x18\x04 \x01(\x02R\x01y\x12\x18\n" +
	"\aGeoHash\x18\x05 \x01(\rR\aGeoHash\x12\x12\n" +
	"\x04TxId\x18\x06 \x01(\tR\x04TxId\x12\x12\n" +
	"\x04time\x18\a \x01(\x04R\x04time\x12\x1a\n" +
	"\bFilePath\x18\b \x01(\tR\bFilePath\x12\x18\n" +
	"\aKeySize\x18\t \x01(\x05R\aKeySize\"\xc9\x02\n" +
	"\rSearchRequest\x12\x18\n" +
	"\aIndexID\x18\x01 \x01(\tR\aIndexID\x12\x10\n" +
	"\x03Key\x18\x02 \x01(\tR\x03Key\x12\x12\n" +
	"\x04TxId\x18\x03 \x01(\tR\x04TxId\x12\x14\n" +
	"\x05Field\x18\x04 \x01(\tR\x05Field\x12\x14\n" +
	"\x05Value\x18\x05 \x01(\tR\x05Value\x12\x14\n" +
	"\x05Begin\x18\x06 \x01(\tR\x05Begin\x12\x10\n" +
	"\x03End\x18\a \x01(\tR\x03End\x12.\n" +
	"\x05ComOp\x18\b \x01(\x0e2\x18.idxserver.ComparisonOpsR\x05ComOp\x12\f\n" +
	"\x01x\x18\t \x01(\x02R\x01x\x12\f\n" +
	"\x01y\x18\n" +
	" \x01(\x02R\x01y\x12\f\n" +
	"\x01k\x18\v \x01(\x05R\x01k\x12\x14\n" +
	"\x05range\x18\f \x01(\x02R\x05range\x12\x1a\n" +
	"\bFilePath\x18\r \x01(\tR\bFilePath\x12\x18\n" +
	"\akeySize\x18\x0e \x01(\x05R\akeySize\"Q\n" +
	"\tRstTxList\x12\x18\n" +
	"\aIndexID\x18\x01 \x01(\tR\aIndexID\x12\x10\n" +
	"\x03Key\x18\x02 \x01(\tR\x03Key\x12\x18\n" +
	"\aIdxData\x18\x03 \x03(\tR\aIdxData\"\xe6\x02\n" +
	"\rIndexableData\x12\x12\n" +
	"\x04TxId\x18\x01 \x01(\tR\x04TxId\x12(\n" +
	"\x0fContractAddress\x18\x02 \x01(\tR\x0fContractAddress\x12\x1c\n" +
	"\tEventName\x18\x03 \x01(\tR\tEventName\x12\x1c\n" +
	"\tTimestamp\x18\x04 \x01(\tR\tTimestamp\x12 \n" +
	"\vBlockNumber\x18\x05 \x01(\x04R\vBlockNumber\x12Q\n" +
	"\rDynamicFields\x18\x06 \x03(\v2+.idxserver.IndexableData.DynamicFieldsEntryR\rDynamicFields\x12$\n" +
	"\rSchemaVersion\x18\a \x01(\tR\rSchemaVersion\x1a@\n" +
	"\x12DynamicFieldsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xbf\b\n" +
	"\fPvdHist_data\x12#\n" +
	"\rCollection_dt\x18\x01 \x01(\tR\fCollectionDt\x121\n" +
	"\x14Startvector_latitude\x18\x02 \x01(\tR\x13StartvectorLatitude\x123\n" +
	"\x15Startvector_longitude\x18\x03 \x01(\tR\x14StartvectorLongitude\x12$\n" +
	"\rTransmisstion\x18\x04 \x01(\tR\rTransmisstion\x12\x14\n" +
	"\x05Speed\x18\x05 \x01(\x05R\x05Speed\x12#\n" +
	"\rHazard_lights\x18\x06 \x01(\tR\fHazardLights\x12-\n" +
	"\x13Left_turn_signal_on\x18\a \x01(\tR\x10LeftTurnSignalOn\x12/\n" +
	"\x14Right_turn_signal_on\x18\b \x01(\tR\x11RightTurnSignalOn\x12\x1a\n" +
	"\bSteering\x18\t \x01(\x05R\bSteering\x12\x10\n" +
	"\x03Rpm\x18\n" +
	" \x01(\x05R\x03Rpm\x12\x1c\n" +
	"\tFootbrake\x18\v \x01(\tR\tFootbrake\x12\x12\n" +
	"\x04Gear\x18\f \x01(\tR\x04Gear\x12\x1c\n" +
	"\tAccelator\x18\r \x01(\x05R\tAccelator\x12\x16\n" +
	"\x06Wipers\x18\x0e \x01(\tR\x06Wipers\x12'\n" +
	"\x10Tire_warn_left_f\x18\x0f \x01(\tR\rTireWarnLeftF\x12'\n" +
	"\x10Tire_warn_left_r\x18\x10 \x01(\tR\rTireWarnLeftR\x12)\n" +
	"\x11Tire_warn_right_f\x18\x11 \x01(\tR\x0eTireWarnRightF\x12)\n" +
	"\x11Tire_warn_right_r\x18\x12 \x01(\tR\x0eTireWarnRightR\x12%\n" +
	"\x0fTire_psi_left_f\x18\x13 \x01(\x05R\fTirePsiLeftF\x12%\n" +
	"\x0fTire_psi_left_r\x18\x14 \x01(\x05R\fTirePsiLeftR\x12'\n" +
	"\x10Tire_psi_right_f\x18\x15 \x01(\x05R\rTirePsiRightF\x12'\n" +
	"\x10Tire_psi_right_r\x18\x16 \x01(\x05R\rTirePsiRightR\x12!\n" +
	"\fFuel_percent\x18\x17 \x01(\x05R\vFuelPercent\x12\x1d\n" +
	"\n" +
	"Fuel_liter\x18\x18 \x01(\x05R\tFuelLiter\x12\x1c\n" +
	"\tTotaldist\x18\x19 \x01(\x05R\tTotaldist\x12\x15\n" +
	"\x06Rsu_id\x18\x1a \x01(\tR\x05RsuId\x12\x15\n" +
	"\x06Msg_id\x18\x1b \x01(\tR\x05MsgId\x12/\n" +
	"\x13Startvector_heading\x18\x1c \x01(\x05R\x12StartvectorHeading\x12\x18\n" +
	"\aAddress\x18\x1d \x01(\tR\aAddress\x12*\n" +
	"\x10OrganizationName\x18\x1e \x01(\tR\x10OrganizationName*p\n" +
	"\rComparisonOps\x12\x06\n" +
	"\x02Eq\x10\x00\x12\t\n" +
	"\x05NotEq\x10\x01\x12\b\n" +
	"\x04Less\x10\x02\x12\x0e\n" +
	"\n" +
	"LessThanEq\x10\x03\x12\v\n" +
	"\aGreater\x10\x04\x12\x11\n" +
	"\rGreaterThanEq\x10\x05\x12\t\n" +
	"\x05Range\x10\x06\x12\a\n" +
	"\x03Knn\x10\a2\x98\x02\n" +
	"\fHLFDataIndex\x12?\n" +
	"\vCreateIndex\x12\x18.idxserver.CreateRequest\x1a\x16.idxserver.IdxResponse\x12>\n" +
	"\vInsertIndex\x12\x15.idxserver.InsertData\x1a\x16.idxserver.IdxResponse(\x01\x12@\n" +
	"\fInsertSIndex\x12\x16.idxserver.InsertSData\x1a\x16.idxserver.IdxResponse(\x01\x12E\n" +
	"\x13GetindexDataByField\x12\x18.idxserver.SearchRequest\x1a\x14.idxserver.RstTxListB\x1cZ\x1afileindex-go/idxserver_apib\x06proto3"

var (
	file_protos_index_server_proto_rawDescOnce sync.Once
	file_protos_index_server_proto_rawDescData []byte
)

func file_protos_index_server_proto_rawDescGZIP() []byte {
	file_protos_index_server_proto_rawDescOnce.Do(func() {
		file_protos_index_server_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_protos_index_server_proto_rawDesc), len(file_protos_index_server_proto_rawDesc)))
	})
	return file_protos_index_server_proto_rawDescData
}

var file_protos_index_server_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_protos_index_server_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_protos_index_server_proto_goTypes = []any{
	(ComparisonOps)(0),    // 0: idxserver.ComparisonOps
	(*CreateRequest)(nil), // 1: idxserver.CreateRequest
	(*IdxResponse)(nil),   // 2: idxserver.IdxResponse
	(*BcDataInfo)(nil),    // 3: idxserver.BcDataInfo
	(*InsertData)(nil),    // 4: idxserver.InsertData
	(*InsertSData)(nil),   // 5: idxserver.InsertSData
	(*SearchRequest)(nil), // 6: idxserver.SearchRequest
	(*RstTxList)(nil),     // 7: idxserver.RstTxList
	(*IndexableData)(nil), // 8: idxserver.IndexableData
	(*PvdHistData)(nil),   // 9: idxserver.PvdHist_data
	nil,                   // 10: idxserver.IndexableData.DynamicFieldsEntry
}
var file_protos_index_server_proto_depIdxs = []int32{
	9,  // 0: idxserver.BcDataInfo.Pvd:type_name -> idxserver.PvdHist_data
	8,  // 1: idxserver.BcDataInfo.IndexableData:type_name -> idxserver.IndexableData
	2,  // 2: idxserver.BcDataInfo.Response:type_name -> idxserver.IdxResponse
	3,  // 3: idxserver.InsertData.BcList:type_name -> idxserver.BcDataInfo
	2,  // 4: idxserver.InsertData.Response:type_name -> idxserver.IdxResponse
	0,  // 5: idxserver.SearchRequest.ComOp:type_name -> idxserver.ComparisonOps
	10, // 6: idxserver.IndexableData.DynamicFields:type_name -> idxserver.IndexableData.DynamicFieldsEntry
	1,  // 7: idxserver.HLFDataIndex.CreateIndex:input_type -> idxserver.CreateRequest
	4,  // 8: idxserver.HLFDataIndex.InsertIndex:input_type -> idxserver.InsertData
	5,  // 9: idxserver.HLFDataIndex.InsertSIndex:input_type -> idxserver.InsertSData
	6,  // 10: idxserver.HLFDataIndex.GetindexDataByField:input_type -> idxserver.SearchRequest
	2,  // 11: idxserver.HLFDataIndex.CreateIndex:output_type -> idxserver.IdxResponse
	2,  // 12: idxserver.HLFDataIndex.InsertIndex:output_type -> idxserver.IdxResponse
	2,  // 13: idxserver.HLFDataIndex.InsertSIndex:output_type -> idxserver.IdxResponse
	7,  // 14: idxserver.HLFDataIndex.GetindexDataByField:output_type -> idxserver.RstTxList
	11, // [11:15] is the sub-list for method output_type
	7,  // [7:11] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_protos_index_server_proto_init() }
func file_protos_index_server_proto_init() {
	if File_protos_index_server_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_protos_index_server_proto_rawDesc), len(file_protos_index_server_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_protos_index_server_proto_goTypes,
		DependencyIndexes: file_protos_index_server_proto_depIdxs,
		EnumInfos:         file_protos_index_server_proto_enumTypes,
		MessageInfos:      file_protos_index_server_proto_msgTypes,
	}.Build()
	File_protos_index_server_proto = out.File
	file_protos_index_server_proto_goTypes = nil
	file_protos_index_server_proto_depIdxs = nil
}
