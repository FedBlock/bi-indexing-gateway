// btree index package for btree index module 2023-06-10
// created by myjang@etri.re.kr
// Update 2023-07-03

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        v3.12.4
// source: protos/index_manager.proto

package mngrapi

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ComparisonOps int32

const (
	ComparisonOps_Eq            ComparisonOps = 0
	ComparisonOps_NotEq         ComparisonOps = 1
	ComparisonOps_Less          ComparisonOps = 2
	ComparisonOps_LessThanEq    ComparisonOps = 3
	ComparisonOps_Greater       ComparisonOps = 4
	ComparisonOps_GreaterThanEq ComparisonOps = 5
	ComparisonOps_Range         ComparisonOps = 6
	ComparisonOps_Knn           ComparisonOps = 7
)

// Enum value maps for ComparisonOps.
var (
	ComparisonOps_name = map[int32]string{
		0: "Eq",
		1: "NotEq",
		2: "Less",
		3: "LessThanEq",
		4: "Greater",
		5: "GreaterThanEq",
		6: "Range",
		7: "Knn",
	}
	ComparisonOps_value = map[string]int32{
		"Eq":            0,
		"NotEq":         1,
		"Less":          2,
		"LessThanEq":    3,
		"Greater":       4,
		"GreaterThanEq": 5,
		"Range":         6,
		"Knn":           7,
	}
)

func (x ComparisonOps) Enum() *ComparisonOps {
	p := new(ComparisonOps)
	*p = x
	return p
}

func (x ComparisonOps) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ComparisonOps) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_index_manager_proto_enumTypes[0].Descriptor()
}

func (ComparisonOps) Type() protoreflect.EnumType {
	return &file_protos_index_manager_proto_enumTypes[0]
}

func (x ComparisonOps) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ComparisonOps.Descriptor instead.
func (ComparisonOps) EnumDescriptor() ([]byte, []int) {
	return file_protos_index_manager_proto_rawDescGZIP(), []int{0}
}

type QueryCallHist struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ComOp         ComparisonOps          `protobuf:"varint,1,opt,name=ComOp,proto3,enum=idxmngrapi.ComparisonOps" json:"ComOp,omitempty"`
	RstCnt        int32                  `protobuf:"varint,2,opt,name=RstCnt,proto3" json:"RstCnt,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryCallHist) Reset() {
	*x = QueryCallHist{}
	mi := &file_protos_index_manager_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryCallHist) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryCallHist) ProtoMessage() {}

func (x *QueryCallHist) ProtoReflect() protoreflect.Message {
	mi := &file_protos_index_manager_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryCallHist.ProtoReflect.Descriptor instead.
func (*QueryCallHist) Descriptor() ([]byte, []int) {
	return file_protos_index_manager_proto_rawDescGZIP(), []int{0}
}

func (x *QueryCallHist) GetComOp() ComparisonOps {
	if x != nil {
		return x.ComOp
	}
	return ComparisonOps_Eq
}

func (x *QueryCallHist) GetRstCnt() int32 {
	if x != nil {
		return x.RstCnt
	}
	return 0
}

// CreateIndex, GetIndexInfo
type IndexInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IndexID       string                 `protobuf:"bytes,1,opt,name=IndexID,proto3" json:"IndexID,omitempty"`
	IndexName     string                 `protobuf:"bytes,2,opt,name=IndexName,proto3" json:"IndexName,omitempty"`
	KeyCol        string                 `protobuf:"bytes,3,opt,name=KeyCol,proto3" json:"KeyCol,omitempty"`
	FilePath      string                 `protobuf:"bytes,4,opt,name=FilePath,proto3" json:"FilePath,omitempty"` //file index storage FilePath
	KeySize       int32                  `protobuf:"varint,5,opt,name=KeySize,proto3" json:"KeySize,omitempty"`  //file index key size (byte)
	BlockNum      int32                  `protobuf:"varint,6,opt,name=BlockNum,proto3" json:"BlockNum,omitempty"`
	CallCnt       int32                  `protobuf:"varint,7,opt,name=CallCnt,proto3" json:"CallCnt,omitempty"`
	KeyCnt        int32                  `protobuf:"varint,8,opt,name=KeyCnt,proto3" json:"KeyCnt,omitempty"`
	IndexDataCnt  int32                  `protobuf:"varint,9,opt,name=IndexDataCnt,proto3" json:"IndexDataCnt,omitempty"` // (IndexDataCnt/KeyCnt) = key duplication ratio
	Param         string                 `protobuf:"bytes,10,opt,name=Param,proto3" json:"Param,omitempty"`
	QCnt          []*QueryCallHist       `protobuf:"bytes,11,rep,name=QCnt,proto3" json:"QCnt,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IndexInfo) Reset() {
	*x = IndexInfo{}
	mi := &file_protos_index_manager_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IndexInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexInfo) ProtoMessage() {}

func (x *IndexInfo) ProtoReflect() protoreflect.Message {
	mi := &file_protos_index_manager_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexInfo.ProtoReflect.Descriptor instead.
func (*IndexInfo) Descriptor() ([]byte, []int) {
	return file_protos_index_manager_proto_rawDescGZIP(), []int{1}
}

func (x *IndexInfo) GetIndexID() string {
	if x != nil {
		return x.IndexID
	}
	return ""
}

func (x *IndexInfo) GetIndexName() string {
	if x != nil {
		return x.IndexName
	}
	return ""
}

func (x *IndexInfo) GetKeyCol() string {
	if x != nil {
		return x.KeyCol
	}
	return ""
}

func (x *IndexInfo) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *IndexInfo) GetKeySize() int32 {
	if x != nil {
		return x.KeySize
	}
	return 0
}

func (x *IndexInfo) GetBlockNum() int32 {
	if x != nil {
		return x.BlockNum
	}
	return 0
}

func (x *IndexInfo) GetCallCnt() int32 {
	if x != nil {
		return x.CallCnt
	}
	return 0
}

func (x *IndexInfo) GetKeyCnt() int32 {
	if x != nil {
		return x.KeyCnt
	}
	return 0
}

func (x *IndexInfo) GetIndexDataCnt() int32 {
	if x != nil {
		return x.IndexDataCnt
	}
	return 0
}

func (x *IndexInfo) GetParam() string {
	if x != nil {
		return x.Param
	}
	return ""
}

func (x *IndexInfo) GetQCnt() []*QueryCallHist {
	if x != nil {
		return x.QCnt
	}
	return nil
}

// GetIndexList
type IndexInfoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RequestMsg    string                 `protobuf:"bytes,1,opt,name=RequestMsg,proto3" json:"RequestMsg,omitempty"` //message for index list
	KeyCol        string                 `protobuf:"bytes,2,opt,name=KeyCol,proto3" json:"KeyCol,omitempty"`
	Param         string                 `protobuf:"bytes,3,opt,name=Param,proto3" json:"Param,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IndexInfoRequest) Reset() {
	*x = IndexInfoRequest{}
	mi := &file_protos_index_manager_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IndexInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexInfoRequest) ProtoMessage() {}

func (x *IndexInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_index_manager_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexInfoRequest.ProtoReflect.Descriptor instead.
func (*IndexInfoRequest) Descriptor() ([]byte, []int) {
	return file_protos_index_manager_proto_rawDescGZIP(), []int{2}
}

func (x *IndexInfoRequest) GetRequestMsg() string {
	if x != nil {
		return x.RequestMsg
	}
	return ""
}

func (x *IndexInfoRequest) GetKeyCol() string {
	if x != nil {
		return x.KeyCol
	}
	return ""
}

func (x *IndexInfoRequest) GetParam() string {
	if x != nil {
		return x.Param
	}
	return ""
}

type IndexList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IndexCnt      int32                  `protobuf:"varint,1,opt,name=IndexCnt,proto3" json:"IndexCnt,omitempty"`
	IdxList       []*IndexInfo           `protobuf:"bytes,2,rep,name=IdxList,proto3" json:"IdxList,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IndexList) Reset() {
	*x = IndexList{}
	mi := &file_protos_index_manager_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IndexList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexList) ProtoMessage() {}

func (x *IndexList) ProtoReflect() protoreflect.Message {
	mi := &file_protos_index_manager_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexList.ProtoReflect.Descriptor instead.
func (*IndexList) Descriptor() ([]byte, []int) {
	return file_protos_index_manager_proto_rawDescGZIP(), []int{3}
}

func (x *IndexList) GetIndexCnt() int32 {
	if x != nil {
		return x.IndexCnt
	}
	return 0
}

func (x *IndexList) GetIdxList() []*IndexInfo {
	if x != nil {
		return x.IdxList
	}
	return nil
}

type BcDataList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TxId          string                 `protobuf:"bytes,1,opt,name=TxId,proto3" json:"TxId,omitempty"`
	KeyCol        string                 `protobuf:"bytes,2,opt,name=key_col,json=keyCol,proto3" json:"key_col,omitempty"`
	Pvd           *PvdHistDataM          `protobuf:"bytes,3,opt,name=Pvd,proto3" json:"Pvd,omitempty"`
	IndexableData *IndexableDataM        `protobuf:"bytes,4,opt,name=IndexableData,proto3" json:"IndexableData,omitempty"` // 범용 데이터
	Response      *IdxMngrResponse       `protobuf:"bytes,5,opt,name=Response,proto3" json:"Response,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BcDataList) Reset() {
	*x = BcDataList{}
	mi := &file_protos_index_manager_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BcDataList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BcDataList) ProtoMessage() {}

func (x *BcDataList) ProtoReflect() protoreflect.Message {
	mi := &file_protos_index_manager_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BcDataList.ProtoReflect.Descriptor instead.
func (*BcDataList) Descriptor() ([]byte, []int) {
	return file_protos_index_manager_proto_rawDescGZIP(), []int{4}
}

func (x *BcDataList) GetTxId() string {
	if x != nil {
		return x.TxId
	}
	return ""
}

func (x *BcDataList) GetKeyCol() string {
	if x != nil {
		return x.KeyCol
	}
	return ""
}

func (x *BcDataList) GetPvd() *PvdHistDataM {
	if x != nil {
		return x.Pvd
	}
	return nil
}

func (x *BcDataList) GetIndexableData() *IndexableDataM {
	if x != nil {
		return x.IndexableData
	}
	return nil
}

func (x *BcDataList) GetResponse() *IdxMngrResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

type InsertDatatoIdx struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IndexID       string                 `protobuf:"bytes,1,opt,name=IndexID,proto3" json:"IndexID,omitempty"`
	BcList        []*BcDataList          `protobuf:"bytes,2,rep,name=BcList,proto3" json:"BcList,omitempty"` //updated(1004)
	Response      *IdxMngrResponse       `protobuf:"bytes,3,opt,name=Response,proto3" json:"Response,omitempty"`
	ColName       string                 `protobuf:"bytes,4,opt,name=ColName,proto3" json:"ColName,omitempty"`
	X             float32                `protobuf:"fixed32,5,opt,name=x,proto3" json:"x,omitempty"`
	Y             float32                `protobuf:"fixed32,6,opt,name=y,proto3" json:"y,omitempty"`
	GeoHash       uint32                 `protobuf:"varint,7,opt,name=GeoHash,proto3" json:"GeoHash,omitempty"`
	TxId          string                 `protobuf:"bytes,8,opt,name=TxId,proto3" json:"TxId,omitempty"`
	Time          uint64                 `protobuf:"varint,9,opt,name=time,proto3" json:"time,omitempty"`
	FilePath      string                 `protobuf:"bytes,10,opt,name=FilePath,proto3" json:"FilePath,omitempty"` //file index storage FilePath
	BlockNum      int32                  `protobuf:"varint,11,opt,name=BlockNum,proto3" json:"BlockNum,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InsertDatatoIdx) Reset() {
	*x = InsertDatatoIdx{}
	mi := &file_protos_index_manager_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InsertDatatoIdx) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertDatatoIdx) ProtoMessage() {}

func (x *InsertDatatoIdx) ProtoReflect() protoreflect.Message {
	mi := &file_protos_index_manager_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertDatatoIdx.ProtoReflect.Descriptor instead.
func (*InsertDatatoIdx) Descriptor() ([]byte, []int) {
	return file_protos_index_manager_proto_rawDescGZIP(), []int{5}
}

func (x *InsertDatatoIdx) GetIndexID() string {
	if x != nil {
		return x.IndexID
	}
	return ""
}

func (x *InsertDatatoIdx) GetBcList() []*BcDataList {
	if x != nil {
		return x.BcList
	}
	return nil
}

func (x *InsertDatatoIdx) GetResponse() *IdxMngrResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *InsertDatatoIdx) GetColName() string {
	if x != nil {
		return x.ColName
	}
	return ""
}

func (x *InsertDatatoIdx) GetX() float32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *InsertDatatoIdx) GetY() float32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *InsertDatatoIdx) GetGeoHash() uint32 {
	if x != nil {
		return x.GeoHash
	}
	return 0
}

func (x *InsertDatatoIdx) GetTxId() string {
	if x != nil {
		return x.TxId
	}
	return ""
}

func (x *InsertDatatoIdx) GetTime() uint64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *InsertDatatoIdx) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *InsertDatatoIdx) GetBlockNum() int32 {
	if x != nil {
		return x.BlockNum
	}
	return 0
}

type IdxMngrResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	ResponseCode    int32                  `protobuf:"varint,1,opt,name=ResponseCode,proto3" json:"ResponseCode,omitempty"` // if 200 OK else Error
	ResponseMessage string                 `protobuf:"bytes,2,opt,name=ResponseMessage,proto3" json:"ResponseMessage,omitempty"`
	Duration        int64                  `protobuf:"varint,3,opt,name=Duration,proto3" json:"Duration,omitempty"` // NanoSeconds
	IndexID         string                 `protobuf:"bytes,4,opt,name=IndexID,proto3" json:"IndexID,omitempty"`
	IndexStatus     *IndexInfo             `protobuf:"bytes,5,opt,name=IndexStatus,proto3" json:"IndexStatus,omitempty"` //updated(1004)
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *IdxMngrResponse) Reset() {
	*x = IdxMngrResponse{}
	mi := &file_protos_index_manager_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IdxMngrResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdxMngrResponse) ProtoMessage() {}

func (x *IdxMngrResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_index_manager_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdxMngrResponse.ProtoReflect.Descriptor instead.
func (*IdxMngrResponse) Descriptor() ([]byte, []int) {
	return file_protos_index_manager_proto_rawDescGZIP(), []int{6}
}

func (x *IdxMngrResponse) GetResponseCode() int32 {
	if x != nil {
		return x.ResponseCode
	}
	return 0
}

func (x *IdxMngrResponse) GetResponseMessage() string {
	if x != nil {
		return x.ResponseMessage
	}
	return ""
}

func (x *IdxMngrResponse) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *IdxMngrResponse) GetIndexID() string {
	if x != nil {
		return x.IndexID
	}
	return ""
}

func (x *IdxMngrResponse) GetIndexStatus() *IndexInfo {
	if x != nil {
		return x.IndexStatus
	}
	return nil
}

type SearchRequestM struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IndexID       string                 `protobuf:"bytes,1,opt,name=IndexID,proto3" json:"IndexID,omitempty"` //index id = used as a key
	Key           string                 `protobuf:"bytes,2,opt,name=Key,proto3" json:"Key,omitempty"`
	TxId          string                 `protobuf:"bytes,3,opt,name=TxId,proto3" json:"TxId,omitempty"`
	Field         string                 `protobuf:"bytes,4,opt,name=Field,proto3" json:"Field,omitempty"`
	Value         string                 `protobuf:"bytes,5,opt,name=Value,proto3" json:"Value,omitempty"`
	Begin         string                 `protobuf:"bytes,6,opt,name=Begin,proto3" json:"Begin,omitempty"`
	End           string                 `protobuf:"bytes,7,opt,name=End,proto3" json:"End,omitempty"`
	ComOp         ComparisonOps          `protobuf:"varint,8,opt,name=ComOp,proto3,enum=idxmngrapi.ComparisonOps" json:"ComOp,omitempty"`
	X             float32                `protobuf:"fixed32,9,opt,name=x,proto3" json:"x,omitempty"`
	Y             float32                `protobuf:"fixed32,10,opt,name=y,proto3" json:"y,omitempty"`
	K             int32                  `protobuf:"varint,11,opt,name=k,proto3" json:"k,omitempty"`
	Range         float32                `protobuf:"fixed32,12,opt,name=range,proto3" json:"range,omitempty"`
	FilePath      string                 `protobuf:"bytes,13,opt,name=FilePath,proto3" json:"FilePath,omitempty"` //file index storage FilePath
	KeySize       int32                  `protobuf:"varint,14,opt,name=KeySize,proto3" json:"KeySize,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchRequestM) Reset() {
	*x = SearchRequestM{}
	mi := &file_protos_index_manager_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchRequestM) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchRequestM) ProtoMessage() {}

func (x *SearchRequestM) ProtoReflect() protoreflect.Message {
	mi := &file_protos_index_manager_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchRequestM.ProtoReflect.Descriptor instead.
func (*SearchRequestM) Descriptor() ([]byte, []int) {
	return file_protos_index_manager_proto_rawDescGZIP(), []int{7}
}

func (x *SearchRequestM) GetIndexID() string {
	if x != nil {
		return x.IndexID
	}
	return ""
}

func (x *SearchRequestM) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *SearchRequestM) GetTxId() string {
	if x != nil {
		return x.TxId
	}
	return ""
}

func (x *SearchRequestM) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *SearchRequestM) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *SearchRequestM) GetBegin() string {
	if x != nil {
		return x.Begin
	}
	return ""
}

func (x *SearchRequestM) GetEnd() string {
	if x != nil {
		return x.End
	}
	return ""
}

func (x *SearchRequestM) GetComOp() ComparisonOps {
	if x != nil {
		return x.ComOp
	}
	return ComparisonOps_Eq
}

func (x *SearchRequestM) GetX() float32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *SearchRequestM) GetY() float32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *SearchRequestM) GetK() int32 {
	if x != nil {
		return x.K
	}
	return 0
}

func (x *SearchRequestM) GetRange() float32 {
	if x != nil {
		return x.Range
	}
	return 0
}

func (x *SearchRequestM) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *SearchRequestM) GetKeySize() int32 {
	if x != nil {
		return x.KeySize
	}
	return 0
}

type IndexValue struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TxId          string                 `protobuf:"bytes,1,opt,name=TxId,proto3" json:"TxId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IndexValue) Reset() {
	*x = IndexValue{}
	mi := &file_protos_index_manager_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IndexValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexValue) ProtoMessage() {}

func (x *IndexValue) ProtoReflect() protoreflect.Message {
	mi := &file_protos_index_manager_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexValue.ProtoReflect.Descriptor instead.
func (*IndexValue) Descriptor() ([]byte, []int) {
	return file_protos_index_manager_proto_rawDescGZIP(), []int{8}
}

func (x *IndexValue) GetTxId() string {
	if x != nil {
		return x.TxId
	}
	return ""
}

type RstTxListM struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IdxInfo       *IndexInfo             `protobuf:"bytes,1,opt,name=idxInfo,proto3" json:"idxInfo,omitempty"`
	Key           string                 `protobuf:"bytes,2,opt,name=Key,proto3" json:"Key,omitempty"`
	IdxData       []string               `protobuf:"bytes,3,rep,name=IdxData,proto3" json:"IdxData,omitempty"` //updated(1004)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RstTxListM) Reset() {
	*x = RstTxListM{}
	mi := &file_protos_index_manager_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RstTxListM) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RstTxListM) ProtoMessage() {}

func (x *RstTxListM) ProtoReflect() protoreflect.Message {
	mi := &file_protos_index_manager_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RstTxListM.ProtoReflect.Descriptor instead.
func (*RstTxListM) Descriptor() ([]byte, []int) {
	return file_protos_index_manager_proto_rawDescGZIP(), []int{9}
}

func (x *RstTxListM) GetIdxInfo() *IndexInfo {
	if x != nil {
		return x.IdxInfo
	}
	return nil
}

func (x *RstTxListM) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *RstTxListM) GetIdxData() []string {
	if x != nil {
		return x.IdxData
	}
	return nil
}

type QueryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ComOp         ComparisonOps          `protobuf:"varint,1,opt,name=ComOp,proto3,enum=idxmngrapi.ComparisonOps" json:"ComOp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryRequest) Reset() {
	*x = QueryRequest{}
	mi := &file_protos_index_manager_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRequest) ProtoMessage() {}

func (x *QueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_index_manager_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRequest.ProtoReflect.Descriptor instead.
func (*QueryRequest) Descriptor() ([]byte, []int) {
	return file_protos_index_manager_proto_rawDescGZIP(), []int{10}
}

func (x *QueryRequest) GetComOp() ComparisonOps {
	if x != nil {
		return x.ComOp
	}
	return ComparisonOps_Eq
}

type QueryInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ComOp         ComparisonOps          `protobuf:"varint,1,opt,name=ComOp,proto3,enum=idxmngrapi.ComparisonOps" json:"ComOp,omitempty"`
	RstSize       int32                  `protobuf:"varint,2,opt,name=RstSize,proto3" json:"RstSize,omitempty"`
	RunTime       int64                  `protobuf:"varint,3,opt,name=RunTime,proto3" json:"RunTime,omitempty"`
	RstMin        int32                  `protobuf:"varint,4,opt,name=RstMin,proto3" json:"RstMin,omitempty"`
	RstMax        int32                  `protobuf:"varint,5,opt,name=RstMax,proto3" json:"RstMax,omitempty"`
	RstMean       int32                  `protobuf:"varint,6,opt,name=RstMean,proto3" json:"RstMean,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryInfo) Reset() {
	*x = QueryInfo{}
	mi := &file_protos_index_manager_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryInfo) ProtoMessage() {}

func (x *QueryInfo) ProtoReflect() protoreflect.Message {
	mi := &file_protos_index_manager_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryInfo.ProtoReflect.Descriptor instead.
func (*QueryInfo) Descriptor() ([]byte, []int) {
	return file_protos_index_manager_proto_rawDescGZIP(), []int{11}
}

func (x *QueryInfo) GetComOp() ComparisonOps {
	if x != nil {
		return x.ComOp
	}
	return ComparisonOps_Eq
}

func (x *QueryInfo) GetRstSize() int32 {
	if x != nil {
		return x.RstSize
	}
	return 0
}

func (x *QueryInfo) GetRunTime() int64 {
	if x != nil {
		return x.RunTime
	}
	return 0
}

func (x *QueryInfo) GetRstMin() int32 {
	if x != nil {
		return x.RstMin
	}
	return 0
}

func (x *QueryInfo) GetRstMax() int32 {
	if x != nil {
		return x.RstMax
	}
	return 0
}

func (x *QueryInfo) GetRstMean() int32 {
	if x != nil {
		return x.RstMean
	}
	return 0
}

type PvdHistDataM struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	CollectionDt         string                 `protobuf:"bytes,1,opt,name=Collection_dt,json=CollectionDt,proto3" json:"Collection_dt,omitempty"`
	StartvectorLatitude  string                 `protobuf:"bytes,2,opt,name=Startvector_latitude,json=StartvectorLatitude,proto3" json:"Startvector_latitude,omitempty"`
	StartvectorLongitude string                 `protobuf:"bytes,3,opt,name=Startvector_longitude,json=StartvectorLongitude,proto3" json:"Startvector_longitude,omitempty"`
	Transmisstion        string                 `protobuf:"bytes,4,opt,name=Transmisstion,proto3" json:"Transmisstion,omitempty"`
	Speed                int32                  `protobuf:"varint,5,opt,name=Speed,proto3" json:"Speed,omitempty"`
	HazardLights         string                 `protobuf:"bytes,6,opt,name=Hazard_lights,json=HazardLights,proto3" json:"Hazard_lights,omitempty"`
	LeftTurnSignalOn     string                 `protobuf:"bytes,7,opt,name=Left_turn_signal_on,json=LeftTurnSignalOn,proto3" json:"Left_turn_signal_on,omitempty"`
	RightTurnSignalOn    string                 `protobuf:"bytes,8,opt,name=Right_turn_signal_on,json=RightTurnSignalOn,proto3" json:"Right_turn_signal_on,omitempty"`
	Steering             int32                  `protobuf:"varint,9,opt,name=Steering,proto3" json:"Steering,omitempty"`
	Rpm                  int32                  `protobuf:"varint,10,opt,name=Rpm,proto3" json:"Rpm,omitempty"`
	Footbrake            string                 `protobuf:"bytes,11,opt,name=Footbrake,proto3" json:"Footbrake,omitempty"`
	Gear                 string                 `protobuf:"bytes,12,opt,name=Gear,proto3" json:"Gear,omitempty"`
	Accelator            int32                  `protobuf:"varint,13,opt,name=Accelator,proto3" json:"Accelator,omitempty"`
	Wipers               string                 `protobuf:"bytes,14,opt,name=Wipers,proto3" json:"Wipers,omitempty"`
	TireWarnLeftF        string                 `protobuf:"bytes,15,opt,name=Tire_warn_left_f,json=TireWarnLeftF,proto3" json:"Tire_warn_left_f,omitempty"`
	TireWarnLeftR        string                 `protobuf:"bytes,16,opt,name=Tire_warn_left_r,json=TireWarnLeftR,proto3" json:"Tire_warn_left_r,omitempty"`
	TireWarnRightF       string                 `protobuf:"bytes,17,opt,name=Tire_warn_right_f,json=TireWarnRightF,proto3" json:"Tire_warn_right_f,omitempty"`
	TireWarnRightR       string                 `protobuf:"bytes,18,opt,name=Tire_warn_right_r,json=TireWarnRightR,proto3" json:"Tire_warn_right_r,omitempty"`
	TirePsiLeftF         int32                  `protobuf:"varint,19,opt,name=Tire_psi_left_f,json=TirePsiLeftF,proto3" json:"Tire_psi_left_f,omitempty"`
	TirePsiLeftR         int32                  `protobuf:"varint,20,opt,name=Tire_psi_left_r,json=TirePsiLeftR,proto3" json:"Tire_psi_left_r,omitempty"`
	TirePsiRightF        int32                  `protobuf:"varint,21,opt,name=Tire_psi_right_f,json=TirePsiRightF,proto3" json:"Tire_psi_right_f,omitempty"`
	TirePsiRightR        int32                  `protobuf:"varint,22,opt,name=Tire_psi_right_r,json=TirePsiRightR,proto3" json:"Tire_psi_right_r,omitempty"`
	FuelPercent          int32                  `protobuf:"varint,23,opt,name=Fuel_percent,json=FuelPercent,proto3" json:"Fuel_percent,omitempty"`
	FuelLiter            int32                  `protobuf:"varint,24,opt,name=Fuel_liter,json=FuelLiter,proto3" json:"Fuel_liter,omitempty"`
	Totaldist            int32                  `protobuf:"varint,25,opt,name=Totaldist,proto3" json:"Totaldist,omitempty"`
	RsuId                string                 `protobuf:"bytes,26,opt,name=Rsu_id,json=RsuId,proto3" json:"Rsu_id,omitempty"`
	MsgId                string                 `protobuf:"bytes,27,opt,name=Msg_id,json=MsgId,proto3" json:"Msg_id,omitempty"`
	StartvectorHeading   int32                  `protobuf:"varint,28,opt,name=Startvector_heading,json=StartvectorHeading,proto3" json:"Startvector_heading,omitempty"`
	Address              string                 `protobuf:"bytes,29,opt,name=Address,proto3" json:"Address,omitempty"`
	OrganizationName     string                 `protobuf:"bytes,30,opt,name=OrganizationName,proto3" json:"OrganizationName,omitempty"` // 추가
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *PvdHistDataM) Reset() {
	*x = PvdHistDataM{}
	mi := &file_protos_index_manager_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PvdHistDataM) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PvdHistDataM) ProtoMessage() {}

func (x *PvdHistDataM) ProtoReflect() protoreflect.Message {
	mi := &file_protos_index_manager_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PvdHistDataM.ProtoReflect.Descriptor instead.
func (*PvdHistDataM) Descriptor() ([]byte, []int) {
	return file_protos_index_manager_proto_rawDescGZIP(), []int{12}
}

func (x *PvdHistDataM) GetCollectionDt() string {
	if x != nil {
		return x.CollectionDt
	}
	return ""
}

func (x *PvdHistDataM) GetStartvectorLatitude() string {
	if x != nil {
		return x.StartvectorLatitude
	}
	return ""
}

func (x *PvdHistDataM) GetStartvectorLongitude() string {
	if x != nil {
		return x.StartvectorLongitude
	}
	return ""
}

func (x *PvdHistDataM) GetTransmisstion() string {
	if x != nil {
		return x.Transmisstion
	}
	return ""
}

func (x *PvdHistDataM) GetSpeed() int32 {
	if x != nil {
		return x.Speed
	}
	return 0
}

func (x *PvdHistDataM) GetHazardLights() string {
	if x != nil {
		return x.HazardLights
	}
	return ""
}

func (x *PvdHistDataM) GetLeftTurnSignalOn() string {
	if x != nil {
		return x.LeftTurnSignalOn
	}
	return ""
}

func (x *PvdHistDataM) GetRightTurnSignalOn() string {
	if x != nil {
		return x.RightTurnSignalOn
	}
	return ""
}

func (x *PvdHistDataM) GetSteering() int32 {
	if x != nil {
		return x.Steering
	}
	return 0
}

func (x *PvdHistDataM) GetRpm() int32 {
	if x != nil {
		return x.Rpm
	}
	return 0
}

func (x *PvdHistDataM) GetFootbrake() string {
	if x != nil {
		return x.Footbrake
	}
	return ""
}

func (x *PvdHistDataM) GetGear() string {
	if x != nil {
		return x.Gear
	}
	return ""
}

func (x *PvdHistDataM) GetAccelator() int32 {
	if x != nil {
		return x.Accelator
	}
	return 0
}

func (x *PvdHistDataM) GetWipers() string {
	if x != nil {
		return x.Wipers
	}
	return ""
}

func (x *PvdHistDataM) GetTireWarnLeftF() string {
	if x != nil {
		return x.TireWarnLeftF
	}
	return ""
}

func (x *PvdHistDataM) GetTireWarnLeftR() string {
	if x != nil {
		return x.TireWarnLeftR
	}
	return ""
}

func (x *PvdHistDataM) GetTireWarnRightF() string {
	if x != nil {
		return x.TireWarnRightF
	}
	return ""
}

func (x *PvdHistDataM) GetTireWarnRightR() string {
	if x != nil {
		return x.TireWarnRightR
	}
	return ""
}

func (x *PvdHistDataM) GetTirePsiLeftF() int32 {
	if x != nil {
		return x.TirePsiLeftF
	}
	return 0
}

func (x *PvdHistDataM) GetTirePsiLeftR() int32 {
	if x != nil {
		return x.TirePsiLeftR
	}
	return 0
}

func (x *PvdHistDataM) GetTirePsiRightF() int32 {
	if x != nil {
		return x.TirePsiRightF
	}
	return 0
}

func (x *PvdHistDataM) GetTirePsiRightR() int32 {
	if x != nil {
		return x.TirePsiRightR
	}
	return 0
}

func (x *PvdHistDataM) GetFuelPercent() int32 {
	if x != nil {
		return x.FuelPercent
	}
	return 0
}

func (x *PvdHistDataM) GetFuelLiter() int32 {
	if x != nil {
		return x.FuelLiter
	}
	return 0
}

func (x *PvdHistDataM) GetTotaldist() int32 {
	if x != nil {
		return x.Totaldist
	}
	return 0
}

func (x *PvdHistDataM) GetRsuId() string {
	if x != nil {
		return x.RsuId
	}
	return ""
}

func (x *PvdHistDataM) GetMsgId() string {
	if x != nil {
		return x.MsgId
	}
	return ""
}

func (x *PvdHistDataM) GetStartvectorHeading() int32 {
	if x != nil {
		return x.StartvectorHeading
	}
	return 0
}

func (x *PvdHistDataM) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *PvdHistDataM) GetOrganizationName() string {
	if x != nil {
		return x.OrganizationName
	}
	return ""
}

// 범용적인 인덱싱 가능한 데이터 구조 (정리됨)
type IndexableDataM struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 인덱싱에 실제로 사용되는 key
	OrganizationName string `protobuf:"bytes,1,opt,name=OrganizationName,proto3" json:"OrganizationName,omitempty"` // 조직명 (삼성전자, LG전자 등)
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *IndexableDataM) Reset() {
	*x = IndexableDataM{}
	mi := &file_protos_index_manager_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IndexableDataM) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexableDataM) ProtoMessage() {}

func (x *IndexableDataM) ProtoReflect() protoreflect.Message {
	mi := &file_protos_index_manager_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexableDataM.ProtoReflect.Descriptor instead.
func (*IndexableDataM) Descriptor() ([]byte, []int) {
	return file_protos_index_manager_proto_rawDescGZIP(), []int{13}
}

func (x *IndexableDataM) GetOrganizationName() string {
	if x != nil {
		return x.OrganizationName
	}
	return ""
}

var File_protos_index_manager_proto protoreflect.FileDescriptor

const file_protos_index_manager_proto_rawDesc = "" +
	"\n" +
	"\x1aprotos/index_manager.proto\x12\n" +
	"idxmngrapi\"X\n" +
	"\rQueryCallHist\x12/\n" +
	"\x05ComOp\x18\x01 \x01(\x0e2\x19.idxmngrapi.ComparisonOpsR\x05ComOp\x12\x16\n" +
	"\x06RstCnt\x18\x02 \x01(\x05R\x06RstCnt\"\xc8\x02\n" +
	"\tIndexInfo\x12\x18\n" +
	"\aIndexID\x18\x01 \x01(\tR\aIndexID\x12\x1c\n" +
	"\tIndexName\x18\x02 \x01(\tR\tIndexName\x12\x16\n" +
	"\x06KeyCol\x18\x03 \x01(\tR\x06KeyCol\x12\x1a\n" +
	"\bFilePath\x18\x04 \x01(\tR\bFilePath\x12\x18\n" +
	"\aKeySize\x18\x05 \x01(\x05R\aKeySize\x12\x1a\n" +
	"\bBlockNum\x18\x06 \x01(\x05R\bBlockNum\x12\x18\n" +
	"\aCallCnt\x18\a \x01(\x05R\aCallCnt\x12\x16\n" +
	"\x06KeyCnt\x18\b \x01(\x05R\x06KeyCnt\x12\"\n" +
	"\fIndexDataCnt\x18\t \x01(\x05R\fIndexDataCnt\x12\x14\n" +
	"\x05Param\x18\n" +
	" \x01(\tR\x05Param\x12-\n" +
	"\x04QCnt\x18\v \x03(\v2\x19.idxmngrapi.QueryCallHistR\x04QCnt\"`\n" +
	"\x10IndexInfoRequest\x12\x1e\n" +
	"\n" +
	"RequestMsg\x18\x01 \x01(\tR\n" +
	"RequestMsg\x12\x16\n" +
	"\x06KeyCol\x18\x02 \x01(\tR\x06KeyCol\x12\x14\n" +
	"\x05Param\x18\x03 \x01(\tR\x05Param\"X\n" +
	"\tIndexList\x12\x1a\n" +
	"\bIndexCnt\x18\x01 \x01(\x05R\bIndexCnt\x12/\n" +
	"\aIdxList\x18\x02 \x03(\v2\x15.idxmngrapi.IndexInfoR\aIdxList\"\xe1\x01\n" +
	"\vBcData_list\x12\x12\n" +
	"\x04TxId\x18\x01 \x01(\tR\x04TxId\x12\x17\n" +
	"\akey_col\x18\x02 \x01(\tR\x06keyCol\x12*\n" +
	"\x03Pvd\x18\x03 \x01(\v2\x18.idxmngrapi.PvdHistDataMR\x03Pvd\x12@\n" +
	"\rIndexableData\x18\x04 \x01(\v2\x1a.idxmngrapi.IndexableDataMR\rIndexableData\x127\n" +
	"\bResponse\x18\x05 \x01(\v2\x1b.idxmngrapi.IdxMngrResponseR\bResponse\"\xc5\x02\n" +
	"\x0fInsertDatatoIdx\x12\x18\n" +
	"\aIndexID\x18\x01 \x01(\tR\aIndexID\x12/\n" +
	"\x06BcList\x18\x02 \x03(\v2\x17.idxmngrapi.BcData_listR\x06BcList\x127\n" +
	"\bResponse\x18\x03 \x01(\v2\x1b.idxmngrapi.IdxMngrResponseR\bResponse\x12\x18\n" +
	"\aColName\x18\x04 \x01(\tR\aColName\x12\f\n" +
	"\x01x\x18\x05 \x01(\x02R\x01x\x12\f\n" +
	"\x01y\x18\x06 \x01(\x02R\x01y\x12\x18\n" +
	"\aGeoHash\x18\a \x01(\rR\aGeoHash\x12\x12\n" +
	"\x04TxId\x18\b \x01(\tR\x04TxId\x12\x12\n" +
	"\x04time\x18\t \x01(\x04R\x04time\x12\x1a\n" +
	"\bFilePath\x18\n" +
	" \x01(\tR\bFilePath\x12\x1a\n" +
	"\bBlockNum\x18\v \x01(\x05R\bBlockNum\"\xce\x01\n" +
	"\x0fIdxMngrResponse\x12\"\n" +
	"\fResponseCode\x18\x01 \x01(\x05R\fResponseCode\x12(\n" +
	"\x0fResponseMessage\x18\x02 \x01(\tR\x0fResponseMessage\x12\x1a\n" +
	"\bDuration\x18\x03 \x01(\x03R\bDuration\x12\x18\n" +
	"\aIndexID\x18\x04 \x01(\tR\aIndexID\x127\n" +
	"\vIndexStatus\x18\x05 \x01(\v2\x15.idxmngrapi.IndexInfoR\vIndexStatus\"\xcb\x02\n" +
	"\x0eSearchRequestM\x12\x18\n" +
	"\aIndexID\x18\x01 \x01(\tR\aIndexID\x12\x10\n" +
	"\x03Key\x18\x02 \x01(\tR\x03Key\x12\x12\n" +
	"\x04TxId\x18\x03 \x01(\tR\x04TxId\x12\x14\n" +
	"\x05Field\x18\x04 \x01(\tR\x05Field\x12\x14\n" +
	"\x05Value\x18\x05 \x01(\tR\x05Value\x12\x14\n" +
	"\x05Begin\x18\x06 \x01(\tR\x05Begin\x12\x10\n" +
	"\x03End\x18\a \x01(\tR\x03End\x12/\n" +
	"\x05ComOp\x18\b \x01(\x0e2\x19.idxmngrapi.ComparisonOpsR\x05ComOp\x12\f\n" +
	"\x01x\x18\t \x01(\x02R\x01x\x12\f\n" +
	"\x01y\x18\n" +
	" \x01(\x02R\x01y\x12\f\n" +
	"\x01k\x18\v \x01(\x05R\x01k\x12\x14\n" +
	"\x05range\x18\f \x01(\x02R\x05range\x12\x1a\n" +
	"\bFilePath\x18\r \x01(\tR\bFilePath\x12\x18\n" +
	"\aKeySize\x18\x0e \x01(\x05R\aKeySize\" \n" +
	"\n" +
	"IndexValue\x12\x12\n" +
	"\x04TxId\x18\x01 \x01(\tR\x04TxId\"i\n" +
	"\n" +
	"RstTxListM\x12/\n" +
	"\aidxInfo\x18\x01 \x01(\v2\x15.idxmngrapi.IndexInfoR\aidxInfo\x12\x10\n" +
	"\x03Key\x18\x02 \x01(\tR\x03Key\x12\x18\n" +
	"\aIdxData\x18\x03 \x03(\tR\aIdxData\"?\n" +
	"\fQueryRequest\x12/\n" +
	"\x05ComOp\x18\x01 \x01(\x0e2\x19.idxmngrapi.ComparisonOpsR\x05ComOp\"\xba\x01\n" +
	"\tQueryInfo\x12/\n" +
	"\x05ComOp\x18\x01 \x01(\x0e2\x19.idxmngrapi.ComparisonOpsR\x05ComOp\x12\x18\n" +
	"\aRstSize\x18\x02 \x01(\x05R\aRstSize\x12\x18\n" +
	"\aRunTime\x18\x03 \x01(\x03R\aRunTime\x12\x16\n" +
	"\x06RstMin\x18\x04 \x01(\x05R\x06RstMin\x12\x16\n" +
	"\x06RstMax\x18\x05 \x01(\x05R\x06RstMax\x12\x18\n" +
	"\aRstMean\x18\x06 \x01(\x05R\aRstMean\"\xbf\b\n" +
	"\fPvdHistDataM\x12#\n" +
	"\rCollection_dt\x18\x01 \x01(\tR\fCollectionDt\x121\n" +
	"\x14Startvector_latitude\x18\x02 \x01(\tR\x13StartvectorLatitude\x123\n" +
	"\x15Startvector_longitude\x18\x03 \x01(\tR\x14StartvectorLongitude\x12$\n" +
	"\rTransmisstion\x18\x04 \x01(\tR\rTransmisstion\x12\x14\n" +
	"\x05Speed\x18\x05 \x01(\x05R\x05Speed\x12#\n" +
	"\rHazard_lights\x18\x06 \x01(\tR\fHazardLights\x12-\n" +
	"\x13Left_turn_signal_on\x18\a \x01(\tR\x10LeftTurnSignalOn\x12/\n" +
	"\x14Right_turn_signal_on\x18\b \x01(\tR\x11RightTurnSignalOn\x12\x1a\n" +
	"\bSteering\x18\t \x01(\x05R\bSteering\x12\x10\n" +
	"\x03Rpm\x18\n" +
	" \x01(\x05R\x03Rpm\x12\x1c\n" +
	"\tFootbrake\x18\v \x01(\tR\tFootbrake\x12\x12\n" +
	"\x04Gear\x18\f \x01(\tR\x04Gear\x12\x1c\n" +
	"\tAccelator\x18\r \x01(\x05R\tAccelator\x12\x16\n" +
	"\x06Wipers\x18\x0e \x01(\tR\x06Wipers\x12'\n" +
	"\x10Tire_warn_left_f\x18\x0f \x01(\tR\rTireWarnLeftF\x12'\n" +
	"\x10Tire_warn_left_r\x18\x10 \x01(\tR\rTireWarnLeftR\x12)\n" +
	"\x11Tire_warn_right_f\x18\x11 \x01(\tR\x0eTireWarnRightF\x12)\n" +
	"\x11Tire_warn_right_r\x18\x12 \x01(\tR\x0eTireWarnRightR\x12%\n" +
	"\x0fTire_psi_left_f\x18\x13 \x01(\x05R\fTirePsiLeftF\x12%\n" +
	"\x0fTire_psi_left_r\x18\x14 \x01(\x05R\fTirePsiLeftR\x12'\n" +
	"\x10Tire_psi_right_f\x18\x15 \x01(\x05R\rTirePsiRightF\x12'\n" +
	"\x10Tire_psi_right_r\x18\x16 \x01(\x05R\rTirePsiRightR\x12!\n" +
	"\fFuel_percent\x18\x17 \x01(\x05R\vFuelPercent\x12\x1d\n" +
	"\n" +
	"Fuel_liter\x18\x18 \x01(\x05R\tFuelLiter\x12\x1c\n" +
	"\tTotaldist\x18\x19 \x01(\x05R\tTotaldist\x12\x15\n" +
	"\x06Rsu_id\x18\x1a \x01(\tR\x05RsuId\x12\x15\n" +
	"\x06Msg_id\x18\x1b \x01(\tR\x05MsgId\x12/\n" +
	"\x13Startvector_heading\x18\x1c \x01(\x05R\x12StartvectorHeading\x12\x18\n" +
	"\aAddress\x18\x1d \x01(\tR\aAddress\x12*\n" +
	"\x10OrganizationName\x18\x1e \x01(\tR\x10OrganizationName\"<\n" +
	"\x0eIndexableDataM\x12*\n" +
	"\x10OrganizationName\x18\x01 \x01(\tR\x10OrganizationName*p\n" +
	"\rComparisonOps\x12\x06\n" +
	"\x02Eq\x10\x00\x12\t\n" +
	"\x05NotEq\x10\x01\x12\b\n" +
	"\x04Less\x10\x02\x12\x0e\n" +
	"\n" +
	"LessThanEq\x10\x03\x12\v\n" +
	"\aGreater\x10\x04\x12\x11\n" +
	"\rGreaterThanEq\x10\x05\x12\t\n" +
	"\x05Range\x10\x06\x12\a\n" +
	"\x03Knn\x10\a2\x8b\x04\n" +
	"\rIndex_manager\x12H\n" +
	"\x12CreateIndexRequest\x12\x15.idxmngrapi.IndexInfo\x1a\x1b.idxmngrapi.IdxMngrResponse\x12H\n" +
	"\x12UpdateIndexRequest\x12\x15.idxmngrapi.IndexInfo\x1a\x1b.idxmngrapi.IdxMngrResponse\x12P\n" +
	"\x12InsertIndexRequest\x12\x1b.idxmngrapi.InsertDatatoIdx\x1a\x1b.idxmngrapi.IdxMngrResponse(\x01\x12J\n" +
	"\x14GetindexDataByFieldM\x12\x1a.idxmngrapi.SearchRequestM\x1a\x16.idxmngrapi.RstTxListM\x12B\n" +
	"\fGetIndexInfo\x12\x15.idxmngrapi.IndexInfo\x1a\x1b.idxmngrapi.IdxMngrResponse\x12C\n" +
	"\fGetIndexList\x12\x1c.idxmngrapi.IndexInfoRequest\x1a\x15.idxmngrapi.IndexList\x12?\n" +
	"\fGetQueryInfo\x12\x18.idxmngrapi.QueryRequest\x1a\x15.idxmngrapi.QueryInfoB\x14Z\x12idxmngr-go/mngrapib\x06proto3"

var (
	file_protos_index_manager_proto_rawDescOnce sync.Once
	file_protos_index_manager_proto_rawDescData []byte
)

func file_protos_index_manager_proto_rawDescGZIP() []byte {
	file_protos_index_manager_proto_rawDescOnce.Do(func() {
		file_protos_index_manager_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_protos_index_manager_proto_rawDesc), len(file_protos_index_manager_proto_rawDesc)))
	})
	return file_protos_index_manager_proto_rawDescData
}

var file_protos_index_manager_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_protos_index_manager_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_protos_index_manager_proto_goTypes = []any{
	(ComparisonOps)(0),       // 0: idxmngrapi.ComparisonOps
	(*QueryCallHist)(nil),    // 1: idxmngrapi.QueryCallHist
	(*IndexInfo)(nil),        // 2: idxmngrapi.IndexInfo
	(*IndexInfoRequest)(nil), // 3: idxmngrapi.IndexInfoRequest
	(*IndexList)(nil),        // 4: idxmngrapi.IndexList
	(*BcDataList)(nil),       // 5: idxmngrapi.BcData_list
	(*InsertDatatoIdx)(nil),  // 6: idxmngrapi.InsertDatatoIdx
	(*IdxMngrResponse)(nil),  // 7: idxmngrapi.IdxMngrResponse
	(*SearchRequestM)(nil),   // 8: idxmngrapi.SearchRequestM
	(*IndexValue)(nil),       // 9: idxmngrapi.IndexValue
	(*RstTxListM)(nil),       // 10: idxmngrapi.RstTxListM
	(*QueryRequest)(nil),     // 11: idxmngrapi.QueryRequest
	(*QueryInfo)(nil),        // 12: idxmngrapi.QueryInfo
	(*PvdHistDataM)(nil),     // 13: idxmngrapi.PvdHistDataM
	(*IndexableDataM)(nil),   // 14: idxmngrapi.IndexableDataM
}
var file_protos_index_manager_proto_depIdxs = []int32{
	0,  // 0: idxmngrapi.QueryCallHist.ComOp:type_name -> idxmngrapi.ComparisonOps
	1,  // 1: idxmngrapi.IndexInfo.QCnt:type_name -> idxmngrapi.QueryCallHist
	2,  // 2: idxmngrapi.IndexList.IdxList:type_name -> idxmngrapi.IndexInfo
	13, // 3: idxmngrapi.BcData_list.Pvd:type_name -> idxmngrapi.PvdHistDataM
	14, // 4: idxmngrapi.BcData_list.IndexableData:type_name -> idxmngrapi.IndexableDataM
	7,  // 5: idxmngrapi.BcData_list.Response:type_name -> idxmngrapi.IdxMngrResponse
	5,  // 6: idxmngrapi.InsertDatatoIdx.BcList:type_name -> idxmngrapi.BcData_list
	7,  // 7: idxmngrapi.InsertDatatoIdx.Response:type_name -> idxmngrapi.IdxMngrResponse
	2,  // 8: idxmngrapi.IdxMngrResponse.IndexStatus:type_name -> idxmngrapi.IndexInfo
	0,  // 9: idxmngrapi.SearchRequestM.ComOp:type_name -> idxmngrapi.ComparisonOps
	2,  // 10: idxmngrapi.RstTxListM.idxInfo:type_name -> idxmngrapi.IndexInfo
	0,  // 11: idxmngrapi.QueryRequest.ComOp:type_name -> idxmngrapi.ComparisonOps
	0,  // 12: idxmngrapi.QueryInfo.ComOp:type_name -> idxmngrapi.ComparisonOps
	2,  // 13: idxmngrapi.Index_manager.CreateIndexRequest:input_type -> idxmngrapi.IndexInfo
	2,  // 14: idxmngrapi.Index_manager.UpdateIndexRequest:input_type -> idxmngrapi.IndexInfo
	6,  // 15: idxmngrapi.Index_manager.InsertIndexRequest:input_type -> idxmngrapi.InsertDatatoIdx
	8,  // 16: idxmngrapi.Index_manager.GetindexDataByFieldM:input_type -> idxmngrapi.SearchRequestM
	2,  // 17: idxmngrapi.Index_manager.GetIndexInfo:input_type -> idxmngrapi.IndexInfo
	3,  // 18: idxmngrapi.Index_manager.GetIndexList:input_type -> idxmngrapi.IndexInfoRequest
	11, // 19: idxmngrapi.Index_manager.GetQueryInfo:input_type -> idxmngrapi.QueryRequest
	7,  // 20: idxmngrapi.Index_manager.CreateIndexRequest:output_type -> idxmngrapi.IdxMngrResponse
	7,  // 21: idxmngrapi.Index_manager.UpdateIndexRequest:output_type -> idxmngrapi.IdxMngrResponse
	7,  // 22: idxmngrapi.Index_manager.InsertIndexRequest:output_type -> idxmngrapi.IdxMngrResponse
	10, // 23: idxmngrapi.Index_manager.GetindexDataByFieldM:output_type -> idxmngrapi.RstTxListM
	7,  // 24: idxmngrapi.Index_manager.GetIndexInfo:output_type -> idxmngrapi.IdxMngrResponse
	4,  // 25: idxmngrapi.Index_manager.GetIndexList:output_type -> idxmngrapi.IndexList
	12, // 26: idxmngrapi.Index_manager.GetQueryInfo:output_type -> idxmngrapi.QueryInfo
	20, // [20:27] is the sub-list for method output_type
	13, // [13:20] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_protos_index_manager_proto_init() }
func file_protos_index_manager_proto_init() {
	if File_protos_index_manager_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_protos_index_manager_proto_rawDesc), len(file_protos_index_manager_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_protos_index_manager_proto_goTypes,
		DependencyIndexes: file_protos_index_manager_proto_depIdxs,
		EnumInfos:         file_protos_index_manager_proto_enumTypes,
		MessageInfos:      file_protos_index_manager_proto_msgTypes,
	}.Build()
	File_protos_index_manager_proto = out.File
	file_protos_index_manager_proto_goTypes = nil
	file_protos_index_manager_proto_depIdxs = nil
}
